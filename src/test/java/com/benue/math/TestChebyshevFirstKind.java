package com.benue.math;

import org.junit.Assert;
import org.junit.Test;

import java.util.Arrays;

public class TestChebyshevFirstKind {

    @Test
    public void coefficients20() {

        int degree = 20;

        String wegot            = Arrays.deepToString(ChebyshevFirstKind.coefficients(degree));
        String expected         = "[[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, -3, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, -8, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 5, 0, -20, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-1, 0, 18, 0, -48, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, -7, 0, 56, 0, -112, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, -32, 0, 160, 0, -256, 0, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 9, 0, -120, 0, 432, 0, -576, 0, 256, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-1, 0, 50, 0, -400, 0, 1120, 0, -1280, 0, 512, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, -11, 0, 220, 0, -1232, 0, 2816, 0, -2816, 0, 1024, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, -72, 0, 840, 0, -3584, 0, 6912, 0, -6144, 0, 2048, 0, 0, 0, 0, 0, 0, 0, 0], [0, 13, 0, -364, 0, 2912, 0, -9984, 0, 16640, 0, -13312, 0, 4096, 0, 0, 0, 0, 0, 0, 0], [-1, 0, 98, 0, -1568, 0, 9408, 0, -26880, 0, 39424, 0, -28672, 0, 8192, 0, 0, 0, 0, 0, 0], [0, -15, 0, 560, 0, -6048, 0, 28800, 0, -70400, 0, 92160, 0, -61440, 0, 16384, 0, 0, 0, 0, 0], [1, 0, -128, 0, 2688, 0, -21504, 0, 84480, 0, -180224, 0, 212992, 0, -131072, 0, 32768, 0, 0, 0, 0], [0, 17, 0, -816, 0, 11424, 0, -71808, 0, 239360, 0, -452608, 0, 487424, 0, -278528, 0, 65536, 0, 0, 0], [-1, 0, 162, 0, -4320, 0, 44352, 0, -228096, 0, 658944, 0, -1118208, 0, 1105920, 0, -589824, 0, 131072, 0, 0], [0, -19, 0, 1140, 0, -20064, 0, 160512, 0, -695552, 0, 1770496, 0, -2723840, 0, 2490368, 0, -1245184, 0, 262144, 0], [1, 0, -200, 0, 6600, 0, -84480, 0, 549120, 0, -2050048, 0, 4659200, 0, -6553600, 0, 5570560, 0, -2621440, 0, 524288]]";
        Assert.assertEquals(expected, wegot);
    }

    @Test
    public void polynomialT5() {

        int [][] coefficients   = ChebyshevFirstKind.coefficients(20);
        double [] results       = ChebyshevFirstKind.polynomial(5, 17, coefficients);

        String wegot            = Arrays.toString(results);
        String expected         = "[-1.0, 0.81689453125, 0.890625, 0.23193359375, -0.5, -0.93896484375, -0.953125, -0.58642578125, 0.0, 0.58642578125, 0.953125, 0.93896484375, 0.5, -0.23193359375, -0.890625, -0.81689453125, 1.0]";
        Assert.assertEquals(expected, wegot);
    }

    @Test
    public void polynomialT5Cosine() {

        int resolution          = 17;
        int [][] coefficients   = ChebyshevFirstKind.coefficients(20);
        double [] results       = ChebyshevFirstKind.polynomial(1, resolution, coefficients, Cosine.cosines(0,360,resolution));

        String wegot            = Arrays.toString(results);
        String expected         = "[1.0, 0.9271838545667874, 0.7193398003386512, 0.4067366430758004, 0.03489949670250108, -0.3420201433256687, -0.6691306063588579, -0.8987940462991668, -0.9975640502598242, -0.9510565162951535, -0.7660444431189781, -0.46947156278589075, -0.10452846326765423, 0.2756373558169985, 0.6156614753256578, 0.8660254037844384, 0.9902680687415703]";
        Assert.assertEquals(expected, wegot);
    }

    @Test
    public void polynomialTxCosine() {

        int resolution          = 17;
        int [] weightings       = {1,1};
        int [][] coefficients   = ChebyshevFirstKind.coefficients(20);
        double [] results       = ChebyshevFirstKind.polynomial(weightings, resolution, coefficients, Cosine.cosines(0,360,resolution));

        String wegot            = Arrays.toString(results);
        String expected         = "[2.0, 1.6465236549054387, 0.7542392970411523, -0.26239396328305764, -0.9626645535573232, -1.1080645864446468, -0.7736590696265122, -0.2831325709735091, -0.007295981518254058, -0.1420395219202063, -0.5923962654520476, -1.0286644662566378, -1.0826760640014597, -0.5724107403394283, 0.37373957972598904, 1.3660254037844375, 1.951529764679889]";
        Assert.assertEquals(expected, wegot);
    }
}
